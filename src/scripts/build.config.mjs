import vue from '@vitejs/plugin-vue';
import vueJsx from '@vitejs/plugin-vue-jsx';
import { fileURLToPath, URL } from 'node:url';
import replace from 'rollup-plugin-replace';

export default ({ path, extName, outDir }) => ({
  publicDir: false,
  resolve: {
    alias: {
      '@': fileURLToPath(new URL('../../src', import.meta.url)),
      '@xui': fileURLToPath(new URL('../../src/node_modules', import.meta.url)),
    },
  },
  configFile: false,
  build: {
    emptyOutDir: false, // multiple builds so don't empty out dir
    target: 'esnext',
    outDir,
    assetsInlineLimit: 0,
    sourcemap: 'hidden',
    lib: {
      entry: path,
      name: extName,
    },
    rollupOptions: {
      makeAbsoluteExternalsRelative: true,
      preserveEntrySignatures: 'strict',
      plugins: [
        replace({
          'process.env.NODE_ENV': JSON.stringify('production'),
        }),
      ],
      external: [
        'vue',
        'axios',
        'dayjs',
        'lodash',
        'lib0',
        'yjs',
        'y-protocols',
        '@asus-aics/syncedstore-core',
        '@asus-aics/y-prosemirror',
        'prosemirror-commands',
        'prosemirror-dropcursor',
        'prosemirror-gapcursor',
        'prosemirror-history',
        'prosemirror-keymap',
        'prosemirror-model',
        'prosemirror-schema-list',
        'prosemirror-state',
        'prosemirror-transform',
        'prosemirror-view',
        '@asus-aics/xui',
        '@asus-aics/x-fe-emitter',
        '@asus-aics/x-fe-logger',
        '@asus-aics/x-fe-native',
        '@asus-aics/x-fe-engine',
        '@asus-aics/x-fe-utils',
        '@asus-aics/x-fe-rule-companion',
        '@asus-aics/xhis-widget-framework',
        '@tiptap/core',
        '@tiptap/extension-bold',
        '@tiptap/extension-bubble-menu',
        '@tiptap/extension-color',
        '@tiptap/extension-document',
        '@tiptap/extension-focus',
        '@tiptap/extension-hard-break',
        '@tiptap/extension-highlight',
        '@tiptap/extension-italic',
        '@tiptap/extension-paragraph',
        '@tiptap/extension-text',
        '@tiptap/extension-text-style',
        '@tiptap/extension-underline',
        '@tiptap/extension-mention',
        '@tiptap/starter-kit',
        '@tiptap/vue-3',
        'fastq',
        'echarts/core',
        'echarts/components',
        'echarts/charts',
        'echarts/renderers',
        'vue-echarts',
        'nanoid',
        'pinia',
      ],
      output: [
        {
          globals: {
            vue: 'Vue',
            axios: 'ExtAxios',
            dayjs: 'ExtDayjs',
            lodash: 'ExtLodash',
            lib0: 'ExtLib0',
            yjs: 'ExtYjs',
            '@asus-aics/syncedstore-core': 'ExtSyncedstoreCore',
            '@asus-aics/y-prosemirror': 'ExtYPprosemirror',
            'prosemirror-commands': 'ExtProsemirrorCommands',
            'prosemirror-dropcursor': 'ExtProsemirrorDropcursor',
            'prosemirror-gapcursor': 'ExtProsemirrorGapcursor',
            'prosemirror-history': 'ExtProsemirrorHistory',
            'prosemirror-keymap': 'ExtProsemirrorKeymap',
            'prosemirror-model': 'ExtProsemirrorModel',
            'prosemirror-schema-list': 'ExtProsemirrorSchemaList',
            'prosemirror-state': 'ExtProsemirrorState',
            'prosemirror-transform': 'ExtProsemirrorTransform',
            'prosemirror-view': 'ExtProsemirrorView',
            '@asus-aics/x-fe-emitter': 'ExtXFeEmitter',
            '@asus-aics/x-fe-logger': 'ExtXFeLogger',
            '@asus-aics/xhis-widget-framework': 'ExtXFeWidgetFramework',
            '@asus-aics/x-fe-engine': 'ExtXFeEngine',
            '@asus-aics/x-fe-utils': 'ExtXFeUtils',
            '@asus-aics/x-fe-rule-companion': 'ExtXFeRuleCompanion',
            '@asus-aics/xui': 'ExtXFeXui',
            '@asus-aics/x-fe-native': 'ExtXFeNative',
            '@tiptap/core': 'ExtTiptapCore',
            '@tiptap/extension-bold': 'ExtTiptapBold',
            '@tiptap/extension-bubble-menu': 'ExtTiptapExtensionBubbleMenu',
            '@tiptap/extension-color': 'ExtTiptapExtensionColor',
            '@tiptap/extension-document': 'ExtTiptapExtensionDocument',
            '@tiptap/extension-focus': 'ExtTiptapExtensionFocus',
            '@tiptap/extension-hard-break': 'ExtTiptapExtensionHardBreak',
            '@tiptap/extension-highlight': 'ExtTiptapExtensionHighlight',
            '@tiptap/extension-italic': 'ExtTiptapExtensionItalic',
            '@tiptap/extension-paragraph': 'ExtTiptapExtensionParagraph',
            '@tiptap/extension-text': 'ExtTiptapExtensionText',
            '@tiptap/extension-text-style': 'ExtTiptapExtensionTextStyle',
            '@tiptap/extension-underline': 'ExtTiptapExtensionUnderline',
            '@tiptap/extension-mention': 'ExtTiptapExtensionMention',
            '@tiptap/starter-kit': 'ExtTiptapStartKit',
            '@tiptap/vue-3': 'ExtTiptapVue3',
            fastq: 'ExtFastq',
            'echarts/core': 'ExtEchartsCore',
            'echarts/components': 'ExtEchartsComponents',
            'echarts/charts': 'ExtEchartsCharts',
            'echarts/renderers': 'ExtEchartsRenderers',
            'vue-echarts': 'ExtVueEcharts',
            nanoid: 'ExtNanoid',
            pinia: 'ExtPinia',
          },
          format: 'iife',
          assetFileNames: `${extName}/index.[ext]`,
          entryFileNames: () => `${extName}/index.js`,
          chunkFileNames: `${extName}/[name].[ext]`,
          name: extName,
          interop: 'compat',
          esModule: true,
          generatedCode: {
            reservedNamesAsProps: false,
          },
          systemNullSetters: false,
        },
      ],
    },
  },
  plugins: [vue(), vueJsx()],
});
